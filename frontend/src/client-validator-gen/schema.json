{
  "type": "object",
  "title": "Schema",
  "definitions": {
    "HTTPValidationError": {
      "title": "HTTPValidationError",
      "type": "object",
      "properties": {
        "detail": {
          "title": "Detail",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ValidationError"
          }
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Order": {
      "description": "An order for a pets from the pet store",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "petId": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "quantity": {
          "format": "int32",
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "shipDate": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "Order Status",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ],
          "type": "string"
        },
        "complete": {
          "default": false,
          "type": "boolean"
        }
      },
      "title": "Pet Order",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Category": {
      "description": "A category for a pet",
      "x-go-custom-tag": "acustomtag:\"category\"",
      "x-custom-comment": "x-custom-comment:\"test\"",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "name": {
          "pattern": "^[a-zA-Z0-9]+[a-zA-Z0-9\\.\\-_]*[a-zA-Z0-9]+$",
          "type": "string"
        }
      },
      "title": "Pet category",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "UpdateUserRequest": {
      "description": "represents User data to update",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        }
      },
      "title": "a User",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "CreateUserRequest": {
      "description": "represents a new User",
      "required": [
        "username",
        "email",
        "password"
      ],
      "properties": {
        "username": {
          "type": "string",
          "pattern": "^[ a-zA-Z0-9_-]+$",
          "minLength": 3
        },
        "email": {
          "type": "string",
          "pattern": "^[A-Za-z0-9+_.-]+@(.+)$"
        },
        "password": {
          "type": "string",
          "minLength": 7
        }
      },
      "title": "a User",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "CreateUserResponse": {
      "description": "represents the response to a User creation",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "user_id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "User": {
      "description": "A User who is purchasing from the pet store",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "description": "User Status",
          "format": "int32",
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        }
      },
      "title": "a User",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Tag": {
      "description": "A tag for a pet",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "name": {
          "type": "string"
        }
      },
      "title": "Pet Tag",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Pet": {
      "description": "A pet for sale in the pet store",
      "properties": {
        "id": {
          "format": "int64",
          "type": "integer",
          "x-go-custom-tag": "acustomtag:\"id\"",
          "minimum": -9223372036854776000,
          "maximum": 9223372036854776000
        },
        "category": {
          "$ref": "#/definitions/Category"
        },
        "name": {
          "type": "string",
          "x-go-custom-tag": "acustomtag:\"name\""
        },
        "photoUrls": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "x-go-custom-tag": "acustomtag:\"photo_urls\""
        },
        "tags": {
          "items": {
            "$ref": "#/definitions/Tag"
          },
          "x-go-custom-tag": "acustomtag:\"tags\"",
          "type": "array"
        },
        "status": {
          "description": "pet status in the store",
          "x-custom-comment": "This is a custom comment.",
          "x-go-custom-tag": "acustomtag:\"status\"",
          "enum": [
            "available",
            "pending",
            "sold"
          ],
          "type": "string"
        }
      },
      "required": [
        "name",
        "photoUrls"
      ],
      "title": "a Pet",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "ApiResponse": {
      "description": "Describes the result of uploading an image resource",
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "title": "An uploaded response",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Special": {
      "description": "Describes the result of uploading an image resource",
      "properties": {
        "self": {
          "format": "int32",
          "type": "integer",
          "minimum": -2147483648,
          "maximum": 2147483647
        },
        "private": {
          "type": "string"
        },
        "super": {
          "type": "string"
        },
        "123Number": {
          "type": "string"
        },
        "array[test]": {
          "type": "string"
        },
        "": {
          "type": "string"
        }
      },
      "title": "An uploaded response",
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Dog": {
      "allOf": [
        {
          "$ref": "#/definitions/Animal"
        },
        {
          "$ref": "#/definitions/Dog_allOf"
        }
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Cat": {
      "allOf": [
        {
          "$ref": "#/definitions/Animal"
        },
        {
          "$ref": "#/definitions/Address"
        },
        {
          "$ref": "#/definitions/Cat_allOf"
        }
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Address": {
      "additionalProperties": {
        "type": "integer"
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Animal": {
      "properties": {
        "className": {
          "type": "string"
        },
        "color": {
          "default": "red",
          "type": "string"
        }
      },
      "required": [
        "className"
      ],
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "allof_tag_api_response": {
      "allOf": [
        {
          "$ref": "#/definitions/Tag"
        },
        {
          "$ref": "#/definitions/ApiResponse"
        }
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "AnyOfPig": {
      "anyOf": [
        {
          "$ref": "#/definitions/BasquePig"
        },
        {
          "$ref": "#/definitions/DanishPig"
        }
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Pig": {
      "oneOf": [
        {
          "$ref": "#/definitions/BasquePig"
        },
        {
          "$ref": "#/definitions/DanishPig"
        }
      ],
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "BasquePig": {
      "properties": {
        "className": {
          "type": "string"
        },
        "color": {
          "type": "string"
        }
      },
      "required": [
        "className",
        "color"
      ],
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "DanishPig": {
      "properties": {
        "className": {
          "type": "string"
        },
        "size": {
          "type": "integer"
        }
      },
      "required": [
        "className",
        "size"
      ],
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "NestedOneOf": {
      "properties": {
        "size": {
          "type": "integer"
        },
        "nestedPig": {
          "$ref": "#/definitions/Pig"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "updatePet_request": {
      "properties": {
        "jsonData": {
          "$ref": "#/definitions/Pet"
        },
        "binaryDataN2Information": {
          "format": "binary",
          "type": "string"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "updatePetWithForm_request": {
      "properties": {
        "name": {
          "description": "Updated name of the pet",
          "type": "string"
        },
        "status": {
          "description": "Updated status of the pet",
          "type": "string"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "uploadFile_request": {
      "properties": {
        "additionalMetadata": {
          "description": "Additional data to pass to server",
          "type": "string"
        },
        "file": {
          "description": "file to upload",
          "format": "binary",
          "type": "string"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Dog_allOf": {
      "properties": {
        "breed": {
          "type": "string"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "Cat_allOf": {
      "properties": {
        "declawed": {
          "type": "boolean"
        }
      },
      "type": "object",
      "$schema": "http://json-schema.org/draft-04/schema#"
    },
    "ValidationError": {
      "title": "ValidationError",
      "required": [
        "loc",
        "msg",
        "type"
      ],
      "type": "object",
      "properties": {
        "loc": {
          "title": "Location",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "msg": {
          "title": "Message",
          "type": "string"
        },
        "type": {
          "title": "Error Type",
          "type": "string"
        }
      },
      "$schema": "http://json-schema.org/draft-04/schema#"
    }
  },
  "properties": {
    "HTTPValidationError": {
      "$ref": "#/definitions/HTTPValidationError"
    },
    "Order": {
      "$ref": "#/definitions/Order"
    },
    "Category": {
      "$ref": "#/definitions/Category"
    },
    "UpdateUserRequest": {
      "$ref": "#/definitions/UpdateUserRequest"
    },
    "CreateUserRequest": {
      "$ref": "#/definitions/CreateUserRequest"
    },
    "CreateUserResponse": {
      "$ref": "#/definitions/CreateUserResponse"
    },
    "User": {
      "$ref": "#/definitions/User"
    },
    "Tag": {
      "$ref": "#/definitions/Tag"
    },
    "Pet": {
      "$ref": "#/definitions/Pet"
    },
    "ApiResponse": {
      "$ref": "#/definitions/ApiResponse"
    },
    "Special": {
      "$ref": "#/definitions/Special"
    },
    "Dog": {
      "$ref": "#/definitions/Dog"
    },
    "Cat": {
      "$ref": "#/definitions/Cat"
    },
    "Address": {
      "$ref": "#/definitions/Address"
    },
    "Animal": {
      "$ref": "#/definitions/Animal"
    },
    "allof_tag_api_response": {
      "$ref": "#/definitions/allof_tag_api_response"
    },
    "AnyOfPig": {
      "$ref": "#/definitions/AnyOfPig"
    },
    "Pig": {
      "$ref": "#/definitions/Pig"
    },
    "BasquePig": {
      "$ref": "#/definitions/BasquePig"
    },
    "DanishPig": {
      "$ref": "#/definitions/DanishPig"
    },
    "NestedOneOf": {
      "$ref": "#/definitions/NestedOneOf"
    },
    "updatePet_request": {
      "$ref": "#/definitions/updatePet_request"
    },
    "updatePetWithForm_request": {
      "$ref": "#/definitions/updatePetWithForm_request"
    },
    "uploadFile_request": {
      "$ref": "#/definitions/uploadFile_request"
    },
    "Dog_allOf": {
      "$ref": "#/definitions/Dog_allOf"
    },
    "Cat_allOf": {
      "$ref": "#/definitions/Cat_allOf"
    },
    "ValidationError": {
      "$ref": "#/definitions/ValidationError"
    }
  }
}