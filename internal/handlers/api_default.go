// Code generated by openapi-generator. DO NOT EDIT.

package handlers

import (
	"net/http"

	gen "github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/gen"
	services "github.com/danicc097/openapi-go-gin-postgres-sqlc/internal/services"
	"github.com/gin-gonic/gin"
)

// DefaultApi handles routes with the DefaultApi tag.
type DefaultApi struct {
	svc services.DefaultApi
	// add your own services, etc. as required
}

// NewDefaultApi returns a new handler for DefaultApi.
// Edit as required
// TODO rewriting handler methods based on current postgen:
// see https://eli.thegreenplace.net/2021/rewriting-go-source-code-with-ast-tooling/
// simpler solutions based on drawbacks (complicated, comments not attached to nodes):
// - https://github.com/dave/dst
// - https://github.com/uber-go/gopatch
func NewDefaultApi(svc services.DefaultApi) *DefaultApi {
	return &DefaultApi{
		svc: svc,
	}
}

// Register connects the handlers to a router.
func (t *DefaultApi) Register(r *gin.Engine) {
	gen.RegisterRoute(r, gen.Route{
		Name:        "Ping",
		Method:      http.MethodGet,
		Pattern:     "/v2/ping",
		HandlerFunc: t.Ping,
	})
}

// Ping ping pongs.
func (t *DefaultApi) Ping(c *gin.Context) {
	c.JSON(http.StatusOK, gin.H{})
}
